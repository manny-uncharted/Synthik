"""initialize migrations

Revision ID: 80a824a0fb66
Revises: 
Create Date: 2025-07-03 13:58:34.164472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '80a824a0fb66'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator_id', sa.String(), nullable=False),
    sa.Column('size', sa.String(length=50), nullable=True),
    sa.Column('rows', sa.Integer(), nullable=True),
    sa.Column('tokens', sa.Integer(), nullable=True),
    sa.Column('format', sa.String(length=20), nullable=False),
    sa.Column('schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('price_per_row', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('license', sa.String(length=100), nullable=True),
    sa.Column('visibility', sa.String(length=20), nullable=True),
    sa.Column('downloads', sa.Integer(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('purchases', sa.Integer(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('preview_rows', sa.Integer(), nullable=True),
    sa.Column('preview_filecoin_cid', sa.String(), nullable=True),
    sa.Column('full_filecoin_cid', sa.String(), nullable=True),
    sa.Column('transaction_hash', sa.String(), nullable=True),
    sa.Column('block_number', sa.Integer(), nullable=True),
    sa.Column('generation_lineage', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('draft', 'generating', 'ready', 'failed', 'deprecated', name='dataset_status'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('models',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=False),
    sa.Column('base_model', sa.String(length=100), nullable=False),
    sa.Column('dataset_used', sa.String(), nullable=False),
    sa.Column('dataset_rows', sa.Integer(), nullable=True),
    sa.Column('trained_by_id', sa.String(), nullable=False),
    sa.Column('trained_date', sa.DateTime(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('downloads', sa.Integer(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('filecoin_cid', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('training', 'ready', 'failed', 'deprecated', name='model_status'), nullable=True),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('training_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_external_service_credentials',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_wallet_address', sa.String(), nullable=False),
    sa.Column('platform', sa.Enum('LOCAL_SERVER', 'HUGGING_FACE', 'AWS_SAGEMAKER', 'GOOGLE_VERTEX_AI', 'LIGHTNING_STUDIOS', 'CUSTOM_EXTERNAL', name='trainingplatform'), nullable=False),
    sa.Column('credential_name', sa.String(), nullable=False),
    sa.Column('encrypted_api_key', sa.Text(), nullable=True),
    sa.Column('encrypted_secret_key', sa.Text(), nullable=True),
    sa.Column('additional_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_external_service_credentials_platform'), 'user_external_service_credentials', ['platform'], unique=False)
    op.create_index(op.f('ix_user_external_service_credentials_user_wallet_address'), 'user_external_service_credentials', ['user_wallet_address'], unique=False)
    op.create_index('uix_user_platform_credname', 'user_external_service_credentials', ['user_wallet_address', 'platform', 'credential_name'], unique=True)
    op.create_table('ai_training_jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('job_name', sa.String(), nullable=False),
    sa.Column('user_wallet_address', sa.String(), nullable=False),
    sa.Column('platform', sa.Enum('LOCAL_SERVER', 'HUGGING_FACE', 'AWS_SAGEMAKER', 'GOOGLE_VERTEX_AI', 'LIGHTNING_STUDIOS', 'CUSTOM_EXTERNAL', name='trainingplatform'), nullable=False),
    sa.Column('user_credential_id', sa.String(), nullable=True),
    sa.Column('model_type', sa.String(), nullable=True),
    sa.Column('hyperparameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('training_script_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PREPARING_DATA', 'SUBMITTED', 'QUEUED', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', 'UPDATING_METRICS', name='jobstatus'), nullable=False),
    sa.Column('external_job_id', sa.String(), nullable=True),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('output_model_storage_type', sa.Enum('AKAVE', 'LOCAL_FS', 'GCS', 'AZURE_BLOB', 'HUGGING_FACE', name='modelstoragetype'), nullable=True),
    sa.Column('output_model_url', sa.String(), nullable=True),
    sa.Column('huggingface_model_url', sa.String(), nullable=True),
    sa.Column('logs_url', sa.String(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_credential_id'], ['user_external_service_credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_training_jobs_external_job_id'), 'ai_training_jobs', ['external_job_id'], unique=False)
    op.create_index(op.f('ix_ai_training_jobs_huggingface_model_url'), 'ai_training_jobs', ['huggingface_model_url'], unique=False)
    op.create_index(op.f('ix_ai_training_jobs_job_name'), 'ai_training_jobs', ['job_name'], unique=False)
    op.create_index(op.f('ix_ai_training_jobs_status'), 'ai_training_jobs', ['status'], unique=False)
    op.create_index(op.f('ix_ai_training_jobs_user_wallet_address'), 'ai_training_jobs', ['user_wallet_address'], unique=False)
    op.create_table('generation_jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('dataset_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('queued', 'running', 'completed', 'failed', name='generation_job_status'), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('generation_jobs')
    op.drop_index(op.f('ix_ai_training_jobs_user_wallet_address'), table_name='ai_training_jobs')
    op.drop_index(op.f('ix_ai_training_jobs_status'), table_name='ai_training_jobs')
    op.drop_index(op.f('ix_ai_training_jobs_job_name'), table_name='ai_training_jobs')
    op.drop_index(op.f('ix_ai_training_jobs_huggingface_model_url'), table_name='ai_training_jobs')
    op.drop_index(op.f('ix_ai_training_jobs_external_job_id'), table_name='ai_training_jobs')
    op.drop_table('ai_training_jobs')
    op.drop_index('uix_user_platform_credname', table_name='user_external_service_credentials')
    op.drop_index(op.f('ix_user_external_service_credentials_user_wallet_address'), table_name='user_external_service_credentials')
    op.drop_index(op.f('ix_user_external_service_credentials_platform'), table_name='user_external_service_credentials')
    op.drop_table('user_external_service_credentials')
    op.drop_table('models')
    op.drop_table('datasets')
    # ### end Alembic commands ###
